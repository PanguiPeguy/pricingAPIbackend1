# Port du serveur
server.port=8080

# Configuration R2DBC pour PostgreSQL
spring.r2dbc.url=r2dbc:postgresql://localhost:5432/pricing_db
spring.r2dbc.username=postgres
spring.r2dbc.password=22p3?9
spring.r2dbc.pool.enabled=true
spring.r2dbc.pool.initial-size=10
spring.r2dbc.pool.max-size=20

# Initialisation du schéma (optionnel, si tu veux que R2DBC crée les tables)
#spring.r2dbc.initialization-mode=always
pricing.ml-service-url=${ML_SERVICE_URL:https://pricingapibackend2.onrender.com}

# Configuration pour afficher les requêtes SQL (facultatif, pour le débogage)
logging.level.io.r2dbc.postgresql.QUERY=DEBUG
logging.level.io.r2dbc.postgresql.PARAM=DEBUG

# Configuration JWT
jwt.secret=monSecretJwtTresTresSecurePourLaProductionChangeMoi
jwt.expiration=86400000

# Configuration upload de fichiers
file.upload-dir=uploads/profile-pictures
spring.webflux.multipart.max-in-memory-size=10MB
spring.webflux.multipart.max-disk-usage-per-part=10MB

# Configuration pour servir les fichiers statiques
spring.web.resources.static-locations=file:uploads/
